-- Creación de tabla usuarios
CREATE TABLE C##NODO.usuarios (
    usuario_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR2(255) UNIQUE NOT NULL,
    contraseña VARCHAR2(255) NOT NULL,
    nombre VARCHAR2(255),
    fecha_creacion TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    ultima_actualizacion TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL
);
COMMENT ON TABLE C##NODO.usuarios IS 'Tabla para almacenar información de los usuarios.';
COMMENT ON COLUMN C##NODO.usuarios.contraseña IS 'Almacenar contraseña con hash aplicado.';

-- Creación de secuencia para usuarios
CREATE SEQUENCE C##NODO.usuarios_seq START WITH 1 INCREMENT BY 1;

COMMIT;

-- Creación de tabla redes
CREATE TABLE C##NODO.redes (
    chain_id NUMBER PRIMARY KEY,
    nombre VARCHAR2(255) NOT NULL,
    wallet_firmante VARCHAR2(255) NOT NULL,
    descripcion VARCHAR2(1000),
    fecha_creacion TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL
);
COMMENT ON TABLE C##NODO.redes IS 'Tabla para almacenar información sobre las redes.';

-- Creación de secuencia para redes
CREATE SEQUENCE C##NODO.redes_seq START WITH 1 INCREMENT BY 1;

COMMIT;

-- Creación de tabla nodos
CREATE TABLE C##NODO.nodos (
    nodo_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    chain_id NUMBER NOT NULL,
    nombre VARCHAR2(255) NOT NULL,
    direccion_ip VARCHAR2(39),
    activo NUMBER(1) DEFAULT 1 NOT NULL,
    CONSTRAINT fk_nodos_redes FOREIGN KEY (chain_id) REFERENCES C##NODO.redes (chain_id)
);
COMMENT ON TABLE C##NODO.nodos IS 'Tabla para almacenar información de los nodos dentro de una red.';

-- Creación de secuencia para nodos
CREATE SEQUENCE C##NODO.nodos_seq START WITH 1 INCREMENT BY 1;

COMMIT;

-- Creación de tabla bloques
CREATE TABLE C##NODO.bloques (
    bloque_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nodo_id NUMBER NOT NULL,
    numero_bloque NUMBER NOT NULL,
    hash_bloque VARCHAR2(255) UNIQUE NOT NULL,
    fecha_creacion TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_bloques_nodos FOREIGN KEY (nodo_id) REFERENCES C##NODO.nodos (nodo_id)
);
COMMENT ON TABLE C##NODO.bloques IS 'Tabla para almacenar bloques de transacciones asociados a un nodo.';

-- Creación de secuencia para bloques
CREATE SEQUENCE C##NODO.bloques_seq START WITH 1 INCREMENT BY 1;

COMMIT;

-- Creación de tabla transacciones
CREATE TABLE C##NODO.transacciones (
    transaccion_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    bloque_id NUMBER NOT NULL,
    hash_transaccion VARCHAR2(255) UNIQUE NOT NULL,
    valor_transferido NUMBER NOT NULL,
    estado VARCHAR2(20) NOT NULL,
    fecha_creacion TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_transacciones_bloques FOREIGN KEY (bloque_id) REFERENCES C##NODO.bloques (bloque_id)
);
COMMENT ON TABLE C##NODO.transacciones IS 'Tabla para almacenar transacciones individuales dentro de cada bloque.';

-- Creación de secuencia para transacciones
CREATE SEQUENCE C##NODO.transacciones_seq START WITH 1 INCREMENT BY 1;

COMMIT;

-- Índices adicionales (si se consideran necesarios basados en el uso de la aplicación)
CREATE INDEX C##NODO.idx_usuario_email ON usuarios(email);
CREATE INDEX C##NODO.idx_redes_nombre ON redes(nombre);
CREATE INDEX C##NODO.idx_nodos_chain_id ON nodos(chain_id);
CREATE INDEX C##NODO.idx_bloques_nodo_id ON bloques(nodo_id);
CREATE INDEX C##NODO.idx_transacciones_bloque_id ON transacciones(bloque_id);

-- Inserciones de ejemplo para cada tabla
INSERT INTO C##NODO.usuarios (email, contraseña, nombre) VALUES ('usuario1@example.com', 'contraseña123', 'Usuario Uno');
INSERT INTO C##NODO.usuarios (email, contraseña, nombre) VALUES ('usuario2@example.com', 'contraseña456', 'Usuario Dos');
INSERT INTO C##NODO.usuarios (email, contraseña, nombre) VALUES ('usuario3@example.com', 'contraseña789', 'Usuario Tres');

INSERT INTO C##NODO.redes (chain_id, nombre, wallet_firmante, descripcion) VALUES (redes_seq.NEXTVAL, 'Red Uno', '0xWalletUno', 'Descripción de Red Uno');
INSERT INTO C##NODO.redes (chain_id, nombre, wallet_firmante, descripcion) VALUES (redes_seq.NEXTVAL, 'Red Dos', '0xWalletDos', 'Descripción de Red Dos');
INSERT INTO C##NODO.redes (chain_id, nombre, wallet_firmante, descripcion) VALUES (redes_seq.NEXTVAL, 'Red Tres', '0xWalletTres', 'Descripción de Red Tres');

INSERT INTO C##NODO.nodos (chain_id, nombre, direccion_ip, activo) VALUES (1, 'Nodo 1 de Red Uno', '192.168.1.1', 1);
INSERT INTO C##NODO.nodos (chain_id, nombre, direccion_ip, activo) VALUES (2, 'Nodo 1 de Red Dos', '192.168.1.2', 1);
INSERT INTO C##NODO.nodos (chain_id, nombre, direccion_ip, activo) VALUES (1, 'Nodo 2 de Red Uno', '192.168.1.3', 1);

INSERT INTO C##NODO.bloques (nodo_id, numero_bloque, hash_bloque) VALUES (1, 1, 'hashbloque123');
INSERT INTO C##NODO.bloques (nodo_id, numero_bloque, hash_bloque) VALUES (2, 1, 'hashbloque456');
INSERT INTO C##NODO.bloques (nodo_id, numero_bloque, hash_bloque) VALUES (1, 2, 'hashbloque789');

INSERT INTO C##NODO.transacciones (bloque_id, hash_transaccion, valor_transferido, estado) VALUES (1, 'hashtransaccion123', 100.00, 'Completada');
INSERT INTO C##NODO.transacciones (bloque_id, hash_transaccion, valor_transferido, estado) VALUES (2, 'hashtransaccion456', 200.00, 'Pendiente');
INSERT INTO C##NODO.transacciones (bloque_id, hash_transaccion, valor_transferido, estado) VALUES (1, 'hashtransaccion789', 150.00, 'Completada');

COMMIT;
